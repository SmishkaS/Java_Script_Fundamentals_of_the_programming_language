/*
//1. Написать функцию, преобразующую число в объект. Передавая на вход число от 0 до 999, надо получить на выходе объект,
//в котором в соответствующих свойствах описаны единицы, десятки и сотни.
//Например, для числа 245 надо получить следующий объект: {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}.
//Если число превышает 999, необходимо выдать соответствующее сообщение с помощью console.log и вернуть пустой объект.
//var num = +prompt('Ввидите число от 0 до 999: ')

function object (str) {
    if (str < 0 || str > 999 || isNaN(str) == true) {
        console.log('Вы ввели некорректное значение');
    } else {
        return {
            'единицы': str % 10,
            'десятки': Math.floor(str / 10) % 10,
            'сотни': Math.floor(str / 100)
        }
    }
}

console.log(object(-4))
console.log(object(2))
console.log(object(42))
console.log(object(642))
console.log(object(4242))
*/

// 2. Продолжить работу с интернет-магазином:
// a. В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
// b. Реализуйте такие объекты.
// c. Перенести функционал подсчета корзины на объектно-ориентированную базу.
// ----Реализованно в прошлой ДЗ----

// 3. * Подумать над глобальными сущностями. К примеру, сущность «Продукт» в
// интернет-магазине актуальна не только для корзины, но и для каталога. Стремиться нужно к
// тому, чтобы объект «Продукт» имел единую структуру для различных модулей сайта, но в
// разных местах давал возможность вызывать разные методы.
// ----Некогда было----